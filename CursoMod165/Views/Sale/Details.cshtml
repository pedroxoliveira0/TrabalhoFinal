@model IEnumerable<CursoMod165.Models.ProductList> 
@* @model CursoMod165.Models.Sale *@

<h1>Details</h1>

<h4>Order</h4>

<hr />

<p>
    <!-- Usar interncionalizacao -->
    <!--  a proxima linha faz uma acção; cria a opcao de criar um novo customer   -->
    @* <a class="btn btn-outline-primary" asp-action="Create">@SharedLocalizer["Create New"]</a> *@
    @if (ViewBag.Status != Status.Sent) // se já foi enviado nao posso adicionar mais produtos à venda
    {
        @if (User.IsInRole(CursoMod165Constants.ROLES.VENDOR) || (User.IsInRole(CursoMod165Constants.ROLES.ADMIN))) // (c)
        {
            <a class="btn btn-outline-primary" asp-action="AddProductToOrder" asp-route-id="@ViewBag.SaleID">Add Product To Order</a>  <!-- Add Product To Order</a> -->
        }
    }


    @if (ViewBag.Status == Status.Ordered){
        <a class="btn btn-outline-primary" asp-action="OrderProcess" asp-route-id="@ViewBag.SaleID">Order Process</a> } <!-- Add Product To Order</a> -->
    @if (ViewBag.Status == Status.Purchase_Process)
    { // So aparece botao se tiver em status Purchase Process
    <a class="btn btn-outline-warning" asp-action="PackageOrder" asp-route-id="@ViewBag.SaleID">Package Validation</a>
    }
    @if (ViewBag.Status == Status.Package)
    {
        <a class="btn btn-outline-primary" asp-action="SentOrder" asp-route-id="@ViewBag.SaleID">Sent Order</a> } <!-- Add Product To Order</a> -->

    <!-- teste botao - Para adicionar produtos à lista de produtos da encomenda -->
    <!-- <a class="btn btn-outline-info" asp-action="Botao" asp-route-id="(c)ViewBag.SaleID">Botao</a>   -->

 
    
    <br />
    
    
    <!-- Posso tentar passar valor usando uma celula invisivel... -->
    
</p>

<head>
    <style>
    table {
        border-collapse: collapse;
    }
    th,
    td {
        border: 1px solid #cecfd5;
        padding: 10px 15px;
    }
    </style>
</head>

<table>
  <thead>
    <tr>
      <th scope="col-100">Order Number :     </th>
      <th scope="col">Customer ID :      </th>
      <th scope="col">Customer Name :    </th>
      <th scope="col">Email              </th>
      <th scope ="col">Address : </th>
      <th scope="col">Status : </th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>@ViewBag.NumVenda</td>
      <td>@ViewBag.ClienteID</td>
      <td>@ViewBag.ClienteName</td>
      <td>@ViewBag.Email</td>
      <td>@ViewBag.Address @ViewBag.Zipcode @ViewBag.City #@ViewBag.SaleID</td>
      <td>@ViewBag.Status</td>      
    </tr>
  </tbody>
</table>

<br />

<table>
  <tr>
        <th scope="col">Observations : </th>
  </tr>
  <tr>
        <td>@ViewBag.Obs</td>
  </tr>
</table>

<br />



<!-- <p>(c) ViewBag.Nome</p> -->
<!--(c) ViewBag.Obs -->


<!-- ????????????????????????????????????? -->
<!--Falta create NEW -->
<p>
    <!--  a proxima linha faz uma acção; cria a opcao de criar um novo customer   -->
    <!--  Posso enviar talvez o CodVenda aqui :-->
    <!-- <a class="btn btn-outline-warning" asp-action="Edit" asp-route-id="(c)productList.ID">Edit</a> -->
    @if (User.IsInRole(CursoMod165Constants.ROLES.VENDOR) || (User.IsInRole(CursoMod165Constants.ROLES.ADMIN))) // (c)
    {
        <!-- <a class="btn btn-outline-primary" asp-action="OrderList"> Add Product To List</a>   (c)ViewBag.NumVenda -->
        
        <!-- Não está a funcionar -->
        <a class="btn btn-success" asp-action="AddProductToList" asp-route-id="@ViewBag.SaleID"> + </a> <!-- -->
    }
    <br />
</p>


<!-- Aqui é a tabela do da lista de produtos da venda  -->
<!-- Apresento 1º cabecalho e de seguinda num ciclo for o conteudo linha a linha da base de dados -->




<table class="table">
    <thead>
        <tr>

            <th>
                <!--   está só =  Descricao    -->
                @Html.DisplayNameFor(model => model.ID)

            </th>
            <!-- Codigo da unidade th ou td bold ou nao-->
            <th>
                <!-- Nome do produto dentro da category -->
                @Html.DisplayNameFor(model => model.Sale.CodVenda)
            </th>
            <th>
                <!--  Preço  -->
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                <!--  Quantidade -->
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                <!--  Nome  -->
                @Html.DisplayNameFor(model => model.Product.Description)  <!--  Testar product.description / Quantity-->
            </th>
                




            @*
            <th>
                <!--  Nome na tabela category  -->
                @Html.DisplayNameFor(model => model.Product.Name)
            </th> *@

            <th>
                <!-- Aqui vamos criar novos botoes na tabela: apagar, modificar etc  -->
                <!-- o que é isto ??? -->
                <!-- titulo da tab para as accoes possiveis na tabela -->
                Actions
            </th>
        </tr>
    </thead>
    
    <!-- Apresenta dados que estao na base de dados -->
    <!-- se a tabela estiver vazia apresenta informacao que esta vazia -->
    <tbody> 
        @if (!Model.Any())
        {
            <!-- (Carrinho de compras vazio - Adicione Produto) -->
            <tr>No Data  </tr>
            
        } 
        <!-- para cada elemento do staff apresenta os seguintes campos -->
        <!-- Os campos tem de coincidir com os de cima -->
        @foreach (var productList in Model)
        {
        <tr>


            <td>
                <!-- arroba description.Name -->
                @Html.DisplayFor(modelItem => productList.ID)
            </td>

                <!-- Codigo da unidade -->
                <td>
                    <!-- Nome do produto dentro da category -->
                    @Html.DisplayFor(modelItem => productList.Sale.CodVenda)
                </td>

            <td>
                    <!-- arroba price -->
                 @Html.DisplayFor(modelItem => productList.Price)
            </td>
             <td>
                    <!-- arroba price -->
                 @Html.DisplayFor(modelItem => productList.Quantity)
            </td>
                
            <td>
                    <!-- arroba quantity -->
                    @Html.DisplayFor(modelItem => productList.Product.Description)
            </td>




            @*
            <td>
                    <!-- Nome do produto dentro da category -->
                    @Html.DisplayFor(modelItem => productList.Product.Name)
            </td>
              *@
              
                <td>
                <!--  td é uma celula ou coluna na pagina html -->
                    @*<a class="btn btn-outline-success" asp-action="Details" asp-route-id="@product.ID">Details</a>*@
                    @*<a class="btn btn-outline-warning" asp-action="Edit" asp-route-id="@productList.ID">Edit</a> *@
                    @*<a class="btn btn-outline-danger" asp-action="Delete" asp-route-id="@productList.ID">Delete</a> *@
                    <!-- Confirmar se produto a apagar é o pretendido  -->
                    <a class="btn btn-outline-danger" asp-area="" asp-controller="ShoppingBasket" asp-action="Delete" asp-route-id="@productList.ID">Delete</a>

                   @* asp-action="Index" *@
            </td>
        </tr>
        }

       
        <table>
        
            <tr>
                
                <th scope ="col" style="background-color:cornflowerblue">                         </th> <!-- <th scope="col"> -->
                <th width="330" style="background-color:cornflowerblue" align="right">  </th>
            </tr>
            <tr>
                <td><b>Total Value :</b></td>
                <td align="right">@ViewBag.Totals</td>   <!-- (c)Int32.Parse(@ViewBag.Totals) // .toFixed(2) -->
            </tr>
        </table>
        
    </tbody>
    
    
</table>