@model int

@{
	
	//int counterMyPage = 0; // assim não guarda o estado da variavel
}

<!-- <h1>Trabalho Final de Curso ASP.NET 165</h1>-->

<h1>@ViewData["Titulo1"]</h1>



<!-- <h2>1 de Março de 2024</h2> -->
<h2>@ViewBag.Titulo2</h2>



<h4>1. Enunciado</h4>

<p>
	É pretendido que seja desenvolvida uma aplicação web que apoie a gestão de uma
	loja grossista. Nesta aplicação existem os seguintes modelos:
</p>

<!-- Apresenta lista dos modelos (ul sem ordem), (ol com ordem num.) -->
<ul>
	@foreach (var item in ViewData["Enunciado"] as List<string>)
	{
		<li>@item</li>			@* // "li"" coloca "Dot" item = cada artigo de uma lista *@
	}



</ul>

<!-- Categorias -->
<h4>1.1. Categorias</h4>

<p>
	As categorias são um rótulo que agrupa diferentes produtos.

</p>

<p>
	As categorias são compostas por:
</p>
<!-- Apresenta lista dos modelos (ul sem ordem), (ol com ordem num.) -->
<ul>
	@foreach (var item in TempData["Categorias"] as List<string>)
	{
		<li>@item</li>			@* // "li"" coloca "Dot" item = cada artigo de uma lista *@
	}



</ul>


<!-- Produtos -->
<h4>1.2. Produtos</h4>

<p>
	Os produtos são os artigos que serão vendidos.

</p>


<p>
	Os produtos são compostos por:
</p>

<!-- Apresenta lista dos modelos (ul sem ordem), (ol com ordem num.) -->
<ul>
	@foreach (var item in ViewBag.Produtos)
	{
		<li>@item</li>			@* // item = cada artigo de uma lista *@
	}
	<b><li>Link foto</li></b>
	<b><li>Unidade</li></b>   @* Unidade de medida kg, unitario, litro, etc*@
</ul>


<!-- Clientes -->
<h4>1.3. Clientes</h4>
<p>
	Os clientes desta loja preenchem uma ficha na sua primeira venda com os
	seguintes dados:
</p>

<!-- Apresenta lista dos modelos (ul sem ordem), (ol com ordem num.) -->
<ul>
	@foreach (var item in ViewData["Clientes"] as List<string>)
	{
		<li>@item</li>			@* // "li"" coloca "Dot" item = cada artigo de uma lista *@
	}
	<b>
	<li>ValorCredito</li></b>
	<li><b>DescontoCliente</b></li>


</ul>


<!-- Vendas -->
<h4>1.4. Vendas (Orders/Invoices)</h4>
<p>
	A Venda é constituída pelos seguintes dados:
</p>

<!-- Apresenta lista dos modelos (ul sem ordem), (ol com ordem num.) -->
<ul>
	@foreach (var item in ViewData["Vendas"] as List<string>)
	{
		<li>@item</li>			@* // "li"" coloca "Dot" item = cada artigo de uma lista *@
	}

	<li><b>Incluir Quantidade e preço unitario por cada produto vendido</b></li>


</ul>


<!-- Funcionalidades -->
<h2>2. Funcionalidades</h2>
<p>
	
	De seguida serão listadas as funcionalidades a implementar na aplicação web:
</p>

<!-- Areas de categorias -->
<h4>2.1. Área de Categorias</h4>

<!-- Apresenta lista dos modelos (ul sem ordem), (ol com ordem num.) -->
<ul>
	@foreach (var item in ViewData["ACategorias"] as List<string>)
	{
		<p>@item</p>			@* // "li"" coloca "Dot" item = cada artigo de uma lista *@
	}


</ul>


<!-- Areas de Produtos -->
<h4>2.2. Área Produtos</h4>

<!-- Apresenta lista dos modelos (ul sem ordem), (ol com ordem num.) -->
<ul>
	@foreach (var item in ViewData["AProdutos"] as List<string>)
	{
		<p>@item</p>			@* // "li"" coloca "Dot" item = cada artigo de uma lista *@
	}


</ul>


<!-- Areas de clientes -->
<h2>2.3. Área Clientes</h2>

<!-- Apresenta lista dos modelos (ul sem ordem), (ol com ordem num.) -->
<ul>
	@foreach (var item in ViewData["AClientes"] as List<string>)
	{
		<p>@item</p>			@* // "li"" coloca "Dot" item = cada artigo de uma lista *@
	}



</ul>


<!-- Area de Vendas -->
<h2>2.4. Área de Vendas</h2>

<p>
		2.4.1. Listar as vendas. Filtrar por cliente. 
</p> 
<p>
		2.4.2. Criar/Editar/Ver/Apagar uma venda. Uma venda passa por três passos:
</p>

<!-- 1 passo ou vistas das vendas -->

<h4>1º Passo - Encomenda (Order)</h4>


<ul>

	@foreach (var item in ViewData["IPasso"] as List<string>)
	{
		<p>@item</p>			@* // "li"" coloca "Dot" item = cada artigo de uma lista *@
	}

</ul>

<!-- 2 passo ou vistas das vendas -->

<h4>2º Passo - Processamento (Purchasing Process)</h4>


<ul>

	@foreach (var item in ViewData["IIPasso"] as List<string>)
	{
		<p>@item</p>			@* // "li"" coloca "Dot" item = cada artigo de uma lista *@
	}

</ul>

<!-- 3 passo ou vistas das vendas -->

<h4>3º Passo - Envio (Invoice)</h4>


<ul>

	@foreach (var item in ViewData["IIIPasso"] as List<string>)
	{
		<p>@item</p>			@* // "li"" coloca "Dot" item = cada artigo de uma lista *@
	}

</ul>

<!-- 4 passo ou vistas das vendas -->

<p>
	Têm de existir as seguintes vistas:
</p>

<ul>
	
	@foreach (var item in ViewData["IVPasso"] as List<string>)
	{
		<p>@item</p>			@* // "li"" coloca "Dot" item = cada artigo de uma lista *@
	}

</ul>

<!--  2.4.4  --> 
<p>
	Ver o saldo corrente geral (somatório de vendas menos o somatório de
	vendas pagas).

</p>


<!-- Internacionalizacao -->
<h4>3. Internacionalização</h4>

<p>
	O site tem de estar feito em português e inglês.

</p>


<!-- Papeis -->
<h4>4. Papéis</h4>

<p>
	Existem três tipos de papéis:

</p>
<!-- Apresenta lista dos modelos (ul sem ordem), (ol com ordem num.) -->
<ol>
	@foreach (var item in ViewData["TipoPapeis"] as List<string>)
	{
		<li>@item</li>			@* // "li"" coloca "Dot" item = cada artigo de uma lista *@
	}
</ol>

<br />
<br />

<!-- Apresenta lista dos modelos (ul sem ordem), (ol com ordem num.) -->
<ul>
	@foreach (var item in ViewData["RegrasPapeis"] as List<string>)
	{
		<p>@item</p>			@* // "li"" coloca "Dot" item = cada artigo de uma lista *@
	}
</ul>

<!-- Toastr -->
<h4>5. Toastr</h4>

<p>
	Adicionar notificações de sucessor ou erro em todas as funcionalidades.

</p>

<br />
<p>
	Bom trabalho.

</p>
<br />
<br />






<h4>Observações:</h4>
<body>

	

	1. Acoes a realizar:<br />

	
	<br />
	3. Area de Vendas<br />
	3.1. Fazer tabela com listagem de vendas, filtrar por cliente<br />
	3.4. quando tenho a lista de encomendas, filtrar por cliente nesse momento vou ter botao processamento no topo<br />
	3.5. julgo que a ideia é quando selecionar a vista dessa encomenda é que vou ter o botao para processamento
	(nao faço a minima ideia de como fazer, encomendas, processamento e envio)<br />
3.6. Ter nas vendas/encomendas um campo enviada, correspondente ao evio efectivo da encomenda<br />

	<br />

	Em Falta:
	Na criacao de produtos adicionar o campo peso (usado para envio de mercadorias, será peso por unidade, kd for igual a kilo é )
	Criar Formatacao para codigo postal
	Na criacao de produtos adicionar o campo peso (usado para envio de mercadorias, será peso por unidade, kd for igual a kilo é )
	<p> Falta Alterar a letra quando chego ao 999 </p>
	<p> Melhorar centecimas e decimas do campo quantidade e preço </p>
	<p> Alterar cor das views para cinza/grey </p>
	<p> zip code nao tem formatacao </p>
	<p> Colocar email na Lista/index de customers </p>
	<p> Edit customer nao funciona </p>
	<p> Alterar Cod. Customer para String 000000 </p>
	<p> Ver placeholder="mm/dd/yyyy" -> julgo k é formatacao </p>
	<p> Falta back list nos products Index </p>
	<p> Colocar Status da order visivel na listagem de ordens </p>
	<p> passar eventualmente # para o nº Ordem, ver aula onde é aplicado </p>
	<p> Analisar codigo script do CursoMod165 </p>
	<p> falta ver o k acoontece se apagar uma categoria que já é usada por determinado produto</p>
	<h6 class="text-danger">Adicionar Index.Number para voltar a pagina Details,...ver o que se q...</h6>


	<h6 class="text-danger"> Adicionar coluna com total por linha de cada produto qtd x preco (não é obrigatorio) </h6>
	<h6 class="text-danger"> Preencher de forma simples observacoes e identificador; ja tenho mas nao esta claro </h6>
	<h6 class="text-danger"> Ver como numeros do URL ficam encriptados videos </h6>
	<h6 class="text-danger"> Falta internacionalizacao Sales,Produtos,Order ... </h6>
	<h6 class="text-danger"> Verificar se as mensagens toastr sao internacionias ... </h6>
	<br />
	<h6 class="text-danger"> tirar a palavra Near, na mensagens near sold out ... </h6>
	<h6 class="text-danger"> Aparece um erro qd executa process purchase ... </h6>


</body>
<br />
<br />


<p>Aluno: </p>
<!-- imprime variaveis definidas no controlador Listas dl,dt, dd -->

<p>@TempData["Author"]</p>	 @* //@ vais buscar var, o que esta a seguir a @ é codigo C# *@
<p> </p>
<p>@TempData["Data"]</p>


<!-- Comentario  (aparece no html com a arroba  nao aparece) -->
@* <!-- @TempData["Author"].ToString() --> *@

@*
<p>@ViewBag.X</p>

<p>@ViewData["Y"]</p>

<!-- <p>@TempData["Data"]?.ToString()</p>-->
*@




<p>Page Counter: @Model</p>