<!-- indica que vai usar o model Staff -->
@model IEnumerable<CursoMod165.Models.Appointment>
<!--  IEnumera.. é uma lista!   -->

<h1>Appointment</h1>

<p>
    <!--  a proxima linha faz uma acção; cria a opcao de criar um novo customer   -->
    <!--  Vai para a pagina create Staff se for primido  -->
    <!-- <a class="btn btn-outline-primary" asp-action="Create">Create New</a>  -->
    <a asp-action="Create">@SharedLocalizer["Create New"]</a>
</p>

<p>

    <a asp-action="TomorrowsAppointments" class="btn btn-primary">Check tomorror's Appointments</a>
</p>


<p>


    <a asp-action="NextWeekAppointments" class="btn btn-secondary">Check Next Week's Appointments</a>
</p>




<!-- aqui adicionamos o modelo grid-->
<!-- ("{0:dd-MM-yyyy}"); // vai buscar o formato definido no sistema -->
<!-- fazer o mesmo na tabela tomorrow appointments -->
<!-- fazere como TPC next week appointment-->
<!--  Esta é a nossa grid; vamos agora traduzir os nomes dentro da grid; com SharedLocalizer -->
@(
Html
        .Grid(Model)   
        .Build(columns =>
        {
            // temos de traduzir tambem o que está dentro dos campos
            columns.Add(ap => ap.Number).Titled(SharedLocalizer["Appointment #"]);
            columns.Add(ap => ap.Date).Titled(SharedLocalizer["Date"]).Formatted("{0:dd-MMM-yyyy}")
                                                     .Filterable(GridFilterType.Double);   // aplicacao de filtro duplo
            columns.Add(ap => ap.Time).Titled(SharedLocalizer["Time"]).Formatted("{0:t}");
            columns.Add(ap => ap.Customer.Name).Titled(SharedLocalizer["Customer"]);
            columns.Add(ap => ap.Staff.Name).Titled(SharedLocalizer["Staff"])
                .RenderedAs(ap => $"{ap.Staff.Name}  [{SharedLocalizer[ap.Staff.StaffRole.Name].Value}]");
            columns.Add(ap => SharedLocalizer[ap.Staff.StaffRole.Name].Value).Titled(SharedLocalizer["Staff Role"]);
            columns.Add(ap => ap.IsDone).Titled(SharedLocalizer["Is Done?"])
                .RenderedAs(ap => (ap.IsDone == true ? SharedLocalizer["Yes"] : SharedLocalizer["No"]))
                .UsingFilterOptions(new[]
                {
                    new SelectListItem{ Value = "true", Text = SharedLocalizer["Yes"].Value },
                    new SelectListItem{ Value = "false", Text = SharedLocalizer["No"].Value }
                    // tive de adicionar .Value
                });

            columns.Add(ap => Html.ActionLink(SharedLocalizer["Edit"].Value, "Edit", new { id = ap.ID }, new { @class = "btn btn-primary" }));
            @* columns.Add(Model => Model.ID).RendeedAs(Model =>
                Html.ActionLink("Edit", "Edit", new { id = Model.ID })).Css("btn")
            *@  
            columns.Add(ap => 
                Html.ActionLink(SharedLocalizer["Delete"].Value, "Delete", new { id = ap.ID }, new { @class = "btn btn-primary" }));
                // acrescentar .Value
            })    
        .Filterable()
        .Sortable() 
)